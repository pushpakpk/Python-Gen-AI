# -*- coding: utf-8 -*-
"""pushpak_API.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MBvrL-aYr1H15UiPiahBRBG0sss2pIMB
"""

import requests
import json
import re
from typing import List, Dict

def fetch_data(url: str):
    """Fetch data from the API."""
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        print(f"Type of data: {type(data)}")
        # print(f"Content of data: {data}")
        return data
    else:
        print(f"Failed to fetch data. Status code: {response.status_code}")
        return None


def parse_data(data):
    """Attempt to parse the data, handling various possible structures."""
    if isinstance(data, dict) and 'data' in data and 'data' in data['data']:
        return data['data']['data']
    else:
        print("Unexpected data structure. Unable to parse.")
        return []


def identify_sources_and_collect_citations(parsed_data: List[Dict]) -> List[Dict]:
    """Identify sources and collect citations, filtering out incomplete entries."""
    citations = []
    for item in parsed_data:
        response_text = item['response']
        sources = item.get('source', [])
        for source in sources:
            url = source.get('link', '')
            if url:
                citations.append({"id": source['id'], "link": url})
    return citations

# Example usage
url = "https://devapi.beyondchats.com/api/get_message_with_sources"
data = fetch_data(url)
parsed_data = parse_data(data)
if parsed_data:
    citations = identify_sources_and_collect_citations(parsed_data)
    print(citations)
else:
    print("No valid data to process.")

